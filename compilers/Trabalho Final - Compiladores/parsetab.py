
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'CHAR CHAR_TYPE COMMA EQUALS FLOAT ID INT NUMBER SEMICOLON STRINGdeclaracoes : tipo lista_variaveis SEMICOLONtipo : INT\n            | FLOAT\n            | CHAR_TYPElista_variaveis : variavel\n                       | lista_variaveis COMMA variavelvariavel : ID\n                | ID EQUALS valorvalor : NUMBER\n             | CHAR\n             | STRING'
    
_lr_action_items = {'INT':([0,],[3,]),'FLOAT':([0,],[4,]),'CHAR_TYPE':([0,],[5,]),'$end':([1,9,],[0,-1,]),'ID':([2,3,4,5,10,],[8,-2,-3,-4,8,]),'SEMICOLON':([6,7,8,12,13,14,15,16,],[9,-5,-7,-6,-8,-9,-10,-11,]),'COMMA':([6,7,8,12,13,14,15,16,],[10,-5,-7,-6,-8,-9,-10,-11,]),'EQUALS':([8,],[11,]),'NUMBER':([11,],[14,]),'CHAR':([11,],[15,]),'STRING':([11,],[16,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'declaracoes':([0,],[1,]),'tipo':([0,],[2,]),'lista_variaveis':([2,],[6,]),'variavel':([2,10,],[7,12,]),'valor':([11,],[13,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> declaracoes","S'",1,None,None,None),
  ('declaracoes -> tipo lista_variaveis SEMICOLON','declaracoes',3,'p_declaracoes','parser.py',6),
  ('tipo -> INT','tipo',1,'p_tipo','parser.py',10),
  ('tipo -> FLOAT','tipo',1,'p_tipo','parser.py',11),
  ('tipo -> CHAR_TYPE','tipo',1,'p_tipo','parser.py',12),
  ('lista_variaveis -> variavel','lista_variaveis',1,'p_lista_variaveis','parser.py',16),
  ('lista_variaveis -> lista_variaveis COMMA variavel','lista_variaveis',3,'p_lista_variaveis','parser.py',17),
  ('variavel -> ID','variavel',1,'p_variavel','parser.py',24),
  ('variavel -> ID EQUALS valor','variavel',3,'p_variavel','parser.py',25),
  ('valor -> NUMBER','valor',1,'p_valor','parser.py',32),
  ('valor -> CHAR','valor',1,'p_valor','parser.py',33),
  ('valor -> STRING','valor',1,'p_valor','parser.py',34),
]
